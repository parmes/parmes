#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\noindent
Contact formulations are used in Solfec to facilitate solution of the constraint
s equation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\mathbf{C}\left(\mathbf{U},\mathbf{R}\right)=\mathbf{0}
\]

\end_inset

once contact points are detected between bodies and included into the :ref:`cons
traints <solfec-theory-constraints>`.
 Depending on a solver type a contact formulation can be either used locally
 (on a single contact point level) or globally (on the level of a all contact
 points simultaneously).
 This however does not affect the mathematics of a contact formulation itself.
 Sections below describe the formulations employed by Solfec and point to
 references, source code sections and solver settings related to these formulati
ons.
\end_layout

\begin_layout Section
The frictional contact law
\end_layout

\begin_layout Standard
The frictional contact law in Solfec employs Signorini-Coulomb conditions.
 The velocity based Signorini non-penetration condition reads
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\bar{U}_{N}\ge0\,\,\,R_{N}\ge0\,\,\,\bar{U}_{N}R_{N}=0\label{eq:Signorini}
\end{equation}

\end_inset

where 
\begin_inset Formula $\bar{U}_{N}=U_{N}^{t+h}+e\min\left(0,U_{N}^{t}\right)$
\end_inset

, 
\begin_inset Formula $e$
\end_inset

 is the velocity restitution coefficient, 
\begin_inset Formula $U_{N}$
\end_inset

 is the the normal relative velocity, and 
\begin_inset Formula $R_{N}$
\end_inset

 is the normal reaction.
 The normal direction is consistent with the positive gap velocity so that
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Signorini"

\end_inset

) states, that any violation of the non-penetration results in a reaction
 force or velocity driving at the penetration-free configuration.
 While using 
\begin_inset Formula $\bar{U}_{N}$
\end_inset

 allows to account for the Newton impact law, for models where multiple
 impacts occur during one time step using 
\begin_inset Formula $e>0$
\end_inset

 cannot be justified from a theoretical standpoint.
 The Coulomb's friction law reads
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\left\{ \begin{array}{ll}
\left\Vert \mathbf{R}_{T}\right\Vert \le\mu R_{N}\\
\left\Vert \mathbf{R}_{T}\right\Vert <\mu R_{N} & \Rightarrow\mathbf{U}_{T}=\mathbf{0}\\
\left\Vert \mathbf{R}_{T}\right\Vert =\mu R_{N} & \Rightarrow\exists_{\lambda\ge0}\mathbf{U}_{T}=-\lambda\mathbf{R}_{T}
\end{array}\right.\label{eq:Coulomb}
\end{equation}

\end_inset

A friction force smaller than 
\begin_inset Formula $\mu R_{N}$
\end_inset

 implies sticking, while sliding occurs with the force of value 
\begin_inset Formula $\mu R_{N}$
\end_inset

 and direction opposite to the slip velocity.
 
\end_layout

\begin_layout Section
Projected gradient formulation
\end_layout

\begin_layout Standard
This is an implicit formulation based on 
\begin_inset CommandInset citation
LatexCommand cite
key "AlartCurnier"

\end_inset

 and it is optionally used on an individual contact point level within the
 :ref:`Gauss-Seidel solver <solfec-theory-solvers-gs>`.
 On the point level this formulation is implemented in `dbs.c:35 <https://github.c
om/tkoziara/solfec/blob/master/dbs.c#L35>`_.
 The Signorini condition (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Signorini"

\end_inset

) is expressed as a projection
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
R_{N}=\textrm{proj}_{R_{+}}\left(R_{N}-\rho\bar{U}_{N}\right)\label{eq:RNproj}
\end{equation}

\end_inset

where vector 
\begin_inset Formula $R_{N}-\rho\bar{U}_{N}$
\end_inset

 is projected onto the set 
\begin_inset Formula $R_{+}$
\end_inset

 of positive real numbers.
 Similarly, the Coulomb law (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Coulomb"

\end_inset

) is expressed as a projection as follows
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\mathbf{R}_{T}=\textrm{proj}_{D\left(\mu R_{N}\right)}\left(\mathbf{R}_{T}-\rho\mathbf{U}_{T}\right)\label{eq:RTproj}
\end{equation}

\end_inset

where 
\begin_inset Formula $D\left(F\right)$
\end_inset

 is a two-dimensional 
\begin_inset Formula $\mathbf{0}$
\end_inset

-centred disc of radius 
\begin_inset Formula $\mu R_{N}$
\end_inset

.
 In both cases above, 
\begin_inset Formula $\rho>0$
\end_inset

.
 The name 
\begin_inset Quotes eld
\end_inset

projected gradient
\begin_inset Quotes erd
\end_inset

 refers to the above as resembling a gradient projection formula for an
 optimization problem, where 
\begin_inset Formula $\mathbf{U}$
\end_inset

 expresses a derivative of an objective function with respect to 
\begin_inset Formula $\mathbf{R}$
\end_inset

.
\end_layout

\begin_layout Section
De Saxce and Feng formulation
\end_layout

\begin_layout Standard
This is an implicit formulation based on 
\begin_inset CommandInset citation
LatexCommand cite
key "DeSaxceFeng"

\end_inset

 and it is optionally used on an individual contact point level within the
 :ref:`Gauss-Seidel solver <solfec-theory-solvers-gs>`.
 On the point level this formulation is implemented in `dbs.c:96 <https://github.c
om/tkoziara/solfec/blob/master/dbs.c#L96>`_.We express the Signorini-Coulomb
 law (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Signorini"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Coulomb"

\end_inset

 as an inclusion.
 The friction cone 
\begin_inset Formula $K_{\alpha}$
\end_inset

 is defined as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
K_{\alpha}=\left\{ \mathbf{R}_{\alpha}:\left\Vert \mathbf{R}_{\alpha T}\right\Vert \le\mu_{\alpha}R_{\alpha N},R_{\alpha N}\ge0\right\} \label{eq:Kalpha}
\end{equation}

\end_inset

where 
\begin_inset Formula $\mu_{\alpha}$
\end_inset

 is the coefficient of friction.
 It has been shown by De Saxc
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
'
\end_layout

\end_inset

e and Feng 
\begin_inset CommandInset citation
LatexCommand cite
key "DeSaxceFeng"

\end_inset

, that the Signorini-Coulomb law can be expressed in a compact form
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\begin_inset Formula 
\begin{equation}
-\left[\begin{array}{c}
\mathbf{U}_{\alpha T}\\
\bar{U}_{\alpha N}+\mu_{\alpha}\left\Vert \mathbf{U}_{\alpha T}\right\Vert 
\end{array}\right]\in N_{K_{\alpha}}\left(\mathbf{R}_{\alpha}\right)\label{eq:DSF}
\end{equation}

\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit
where 
\begin_inset Formula $N_{K_{\alpha}}$
\end_inset

 stands for the normal cone of the set 
\begin_inset Formula $K_{\alpha}$
\end_inset

.
 For a convex set 
\begin_inset Formula $A$
\end_inset

 the normal cone 
\begin_inset Formula $N_{A}\left(\mathbf{R}\right)$
\end_inset

 at point 
\begin_inset Formula $\mathbf{R}\in A$
\end_inset

 is defined as the set of all vectors 
\begin_inset Formula $\mathbf{V}$
\end_inset

 such that 
\begin_inset Formula $\left\langle \mathbf{V},\mathbf{S}-\mathbf{R}\right\rangle \le0$
\end_inset

 for all 
\begin_inset Formula $\mathbf{S}\in A$
\end_inset

.
 Based on inclusion (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:DSF"

\end_inset

), the authors of 
\begin_inset CommandInset citation
LatexCommand cite
key "DeSaxceFeng"

\end_inset

 propose the following projection formula
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\mathbf{R}_{\alpha}=\mbox{proj}_{K_{\alpha}}\left(\mathbf{R}_{\alpha}-\rho\left[\begin{array}{c}
\mathbf{U}_{\alpha T}\\
\bar{U}_{\alpha N}+\mu_{\alpha}\left\Vert \mathbf{U}_{\alpha T}\right\Vert 
\end{array}\right]\right)\label{eq:DSFproj}
\end{equation}

\end_inset

where 
\begin_inset Formula $\rho>0.$
\end_inset

 Formula (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:DSFproj"

\end_inset

) can be used instead of the projected gradient formulas (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:RNproj"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:RTproj"

\end_inset

).
\end_layout

\begin_layout Section
Non-smooth force equation formulation
\end_layout

\begin_layout Standard
This is an implicit formulation based on 
\begin_inset CommandInset citation
LatexCommand cite
key "Hueber"

\end_inset

 and it is used by default on an individual contact point level within the
 :ref:`Gauss-Seidel solver <solfec-theory-solvers-gs>`.
 On the point level this formulation is implemented in `dbs.c:142 <https://github.
com/tkoziara/solfec/blob/master/dbs.c#L142>`_.
 The authors of 
\begin_inset CommandInset citation
LatexCommand cite
key "Hueber"

\end_inset

 propose to express the Signorini and Coulomb conditions (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Signorini"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Coulomb"

\end_inset

) as a non-smooth equation 
\begin_inset Formula $\mathbf{C}\left(\mathbf{U},\mathbf{R}\right)=\mathbf{0}$
\end_inset

, where
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\mathbf{C}\left(\mathbf{U},\mathbf{R}\right)=\left[\begin{array}{c}
\max\left(\mu d_{N},\left\Vert \mathbf{d}_{T}\right\Vert \right)\mathbf{R}_{T}-\mu\max\left(0,d_{N}\right)\mathbf{d}_{T}\\
R_{N}-\max\left(0,d_{N}\right)
\end{array}\right]\label{eq:NSFEQ}
\end{equation}

\end_inset

and
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
d_{N}=R_{N}-\rho\bar{U}_{N}\label{eq:dN}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\mathbf{d}_{T}=\mathbf{R}_{T}-\rho\mathbf{U}_{T}\label{eq:dT}
\end{equation}

\end_inset

while 
\begin_inset Formula $\rho>0$
\end_inset

.
 Equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:NSFEQ"

\end_inset

) expresses the projection formulas (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:RNproj"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:RTproj"

\end_inset

).
\end_layout

\begin_layout Section
Non-smooth velocity equation formulation
\end_layout

\begin_layout Standard
This is an implicit formulation developed specifically for Solfec and combining
 ideas from 
\begin_inset CommandInset citation
LatexCommand cite
key "DeSaxceFeng"

\end_inset

 and 
\begin_inset CommandInset citation
LatexCommand cite
key "Fukushima,Hayashi"

\end_inset

.
 It is optionally used on an individual contact point level within the :ref:`Gau
ss-Seidel solver <solfec-theory-solvers-gs>`.
 It is also the basis of contact linearization within the :ref:`projected
 Newton solver <solfec-theory-solvers-pqn>`.
 On the point level this formulation is implemented in `scf.c <https://github.com/
tkoziara/solfec/blob/master/scf.c#L28>`_.
 Using the :ref:`local dynamics <solfec-theory-locdyn>` relationship 
\end_layout

\begin_layout Standard

\series bold
\begin_inset Formula 
\begin{equation}
\mathbf{U_{\alpha}}=\mathbf{B_{\alpha}}+\sum_{\beta}\mathbf{W}_{\alpha\beta}\mathbf{R}_{\beta}\label{eq:locdyn}
\end{equation}

\end_inset


\series default
let us define a function
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\mathbf{F}\left(\mathbf{R}\right)=\left[\begin{array}{c}
...\\
\mathbf{U}_{\alpha T}\left(\mathbf{R}\right)\\
\bar{U}_{\alpha N}\left(\mathbf{R}\right)+\mu_{\alpha}\left\Vert \mathbf{U}_{\alpha T}\left(\mathbf{R}\right)\right\Vert \\
...
\end{array}\right]\label{eq:F}
\end{equation}

\end_inset

and a total cone
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
K=\bigcup_{\alpha}K_{\alpha}
\end{equation}

\end_inset

where 
\begin_inset Formula $\mu_{\alpha}$
\end_inset

 is the coefficient of friction, 
\begin_inset Formula $K_{\alpha}$
\end_inset

 is the friction cone (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Kalpha"

\end_inset

), while the dependence 
\begin_inset Formula $\mathbf{U}_{\alpha}\left(\mathbf{R}\right)$
\end_inset

 is given by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:locdyn"

\end_inset

).
 Formula (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:DSF"

\end_inset

) states, that the frictional contact constraints are satisfied if 
\begin_inset Formula $-\mathbf{F}\left(\mathbf{R}\right)$
\end_inset

 belongs to the normal cone of the friction cone at 
\begin_inset Formula $\mathbf{R}$
\end_inset

.
 Hence
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
-\mathbf{F}\left(\mathbf{R}\right)=\mathbf{R}-\mathbf{F}\left(\mathbf{R}\right)-\mbox{proj}_{K}\left(\mathbf{R}-\mathbf{F}\left(\mathbf{R}\right)\right)
\end{equation}

\end_inset

which can be reduced to the usual projection formula 
\begin_inset Formula $\mathbf{R}=\mbox{proj}_{K}\left(\mathbf{R}-\mathbf{F}\left(\mathbf{R}\right)\right)$
\end_inset

 or (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:DSFproj"

\end_inset

) with 
\begin_inset Formula $\rho=1$
\end_inset

.
 Let us not do it though, but rather define a vector field
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\mathbf{m}\left(\mathbf{S}\right)=\mathbf{S}-\mbox{proj}_{K}\left(\mathbf{S}\right)=\mathbf{n}\left(\mathbf{S}\right)\left\langle \mathbf{n}\left(\mathbf{S}\right),\mathbf{S}\right\rangle 
\end{equation}

\end_inset

where
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\mathbf{n}_{\alpha}\left(\mathbf{S}_{\alpha}\right)=\left\{ \begin{array}{lll}
\mathbf{0} & \mbox{if} & \left\Vert \mathbf{S}_{\alpha T}\right\Vert -\mu_{\alpha}S_{\alpha N}\le0\\
\mathbf{S}_{\alpha}/\left\Vert \mathbf{S}_{\alpha}\right\Vert  & \mbox{if} & \mu_{\alpha}\left\Vert \mathbf{S}_{\alpha T}\right\Vert +S_{\alpha N}<0\\
\frac{1}{\sqrt{1+\mu_{\alpha}^{2}}}\left[\begin{array}{c}
\mathbf{S}_{\alpha T}/\left\Vert \mathbf{S}_{\alpha T}\right\Vert \\
-\mu_{\alpha}
\end{array}\right] & \mbox{} & \mbox{otherwise}
\end{array}\right.\label{eq:n}
\end{equation}

\end_inset

We can rewrite (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:DSF"

\end_inset

) as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\mathbf{C}\left(\mathbf{R}\right)=\mathbf{F}\left(\mathbf{R}\right)+\mathbf{m}\left(\mathbf{R}-\mathbf{F}\left(\mathbf{R}\right)\right)=\mathbf{0}\mbox{ and }\mathbf{R}\in K\label{eq:NSVEQ}
\end{equation}

\end_inset

Note, that 
\begin_inset Formula $\mathbf{F}\left(\mathbf{R}\right)$
\end_inset

 is expressed in terms of velocity, and so is 
\begin_inset Formula $\mathbf{C}\left(\mathbf{R}\right)$
\end_inset

.
 Equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:NSVEQ"

\end_inset

) expresses, in velocity form, the projection formula (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:DSFproj"

\end_inset

).
\end_layout

\begin_layout Section
Semi-explicit penalty formulation
\end_layout

\begin_layout Standard
This is a simple penalty based formulation developed specifically for Solfec
 and used within the :ref:`penalty qsolver <solfec-theory-solvers-penalty>`.
 On the point level this formulation is implemented in `pes.c <https://github.com/
tkoziara/solfec/blob/master/pes.c#L33>`_.
 Let
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
s=spring\mbox{ and }d=dashpot\mbox{ and }g=gap\mbox{ and }m=hpow
\end{equation}

\end_inset

where 
\begin_inset Formula $hpow$
\end_inset

 stands for the 
\begin_inset Quotes eld
\end_inset

Hertz power
\begin_inset Quotes erd
\end_inset

.
 The normal reaction is computed as follows
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
R_{N}=-s\cdot\frac{g^{t+h}+g^{t}}{2}-d\cdot\frac{U_{N}^{t+h}+U_{N}^{t}}{2}\label{eq:spring-dashpot-1}
\end{equation}

\end_inset

where 
\begin_inset Formula $U_{N}$
\end_inset

 is the normal relative velocity.
 :ref:`Recall <solfec-theory-basics>`, that the gap function is computed
 for the configuration 
\begin_inset Formula $\mathbf{q}^{t}+\frac{h}{2}\mathbf{u}^{t}$
\end_inset

, so that the gap function value computed during geometrical contact detection
 reads
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
g=g^{t}+\frac{h}{2}U_{N}^{t}
\end{equation}

\end_inset

We then have
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
g^{t+h}=g^{t}+\frac{h}{2}\left(U_{N}^{t+h}+U_{N}^{t}\right)=g+\frac{h}{2}U_{N}^{t+h}
\end{equation}

\end_inset

and since 
\begin_inset Formula $g^{t}=g-\frac{h}{2}U_{N}^{t}$
\end_inset

 we can estimate
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
R_{N}=-s\cdot\left(g+\frac{h}{4}\left(U_{N}^{t+h}-U_{N}^{t}\right)\right)-\frac{d}{2}\cdot\left(U_{N}^{t+h}+U_{N}^{t}\right)\label{eq:spring-dashpot-2}
\end{equation}

\end_inset

We then use the diagonal block of local dynamics
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\mathbf{U}^{t+h}=\mathbf{B}+\mathbf{W}\mathbf{R}
\end{equation}

\end_inset

in order to estimate 
\begin_inset Formula $U_{N}^{t+h}$
\end_inset

 as follows
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
U_{N}^{t+h}=B_{N}+\mathbf{W}_{NT}\mathbf{R}_{T}+W_{NN}R_{N}
\end{equation}

\end_inset

where a previous tangential reaction 
\begin_inset Formula $\mathbf{R}_{T}$
\end_inset

 is employed.
 Inserting this it into (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:spring-dashpot-2"

\end_inset

) results in
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\bar{B}_{N}=B_{N}+\mathbf{W}_{NT}\mathbf{R}_{T}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
R_{N}=\left[-s\cdot\left(g+\frac{h}{4}\left(\bar{B}_{N}-U_{N}^{t}\right)\right)-\frac{d}{2}\cdot\left(\bar{B}_{N}+U_{N}^{t}\right)\right]/\left[1+\left(s\cdot\frac{h}{4}+\frac{d}{2}\right)\cdot W_{NN}\right]\label{eq:spring-dashpot-3}
\end{equation}

\end_inset

The reason for using the above, rather than the classical 
\begin_inset Formula $R_{N}=-s\cdot g-d\cdot U_{N}^{t}$
\end_inset

 is in an increased stability of the this approach.
 Since we aim at simplicity and want to avoid any nonlinear solve only at
 this stage we include the Hertz law power
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
g_{1}=\mbox{min}\left(g+\frac{h}{4}\left(\bar{B}_{N}-U_{N}^{t}\right),0\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
s_{1}=sm\left(-g_{1}\right)^{m-1}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
R_{N}=\left[s\cdot\left(-g_{1}\right)^{m}-\frac{d}{2}\cdot\left(\bar{B}_{N}+U_{N}^{t}\right)\right]/\left[1+\left(s_{1}\cdot\frac{h}{4}+\frac{d}{2}\right)\cdot W_{NN}\right]
\]

\end_inset

Again aiming at maximum simplicity and assuming 
\begin_inset Formula $\mathbf{U}_{T}^{t+h}=0$
\end_inset

 we then estimate the tangential stick reaction
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\mathbf{R}_{T}=-\mathbf{W}_{TT}^{-1}\left(\mathbf{B}_{T}+\mathbf{W}_{TN}R_{N}\right)
\end{equation}

\end_inset

The complete interface law is expressed the Algorithm below (where 
\begin_inset Formula $\mu$
\end_inset

 refers there to the coefficient of friction).
 
\end_layout

\begin_layout LyX-Code
SPRING_DASHPOT_CONTACT 
\begin_inset Formula $\left(h,g,s,d,\mu,cohesion,cohesive\right)$
\end_inset


\end_layout

\begin_layout LyX-Code
  
\begin_inset Formula $\bar{B}_{N}=B_{N}+\mathbf{W}_{NT}\mathbf{R}_{T}$
\end_inset


\end_layout

\begin_layout LyX-Code
  if implicit then
\end_layout

\begin_layout LyX-Code
    
\begin_inset Formula $g_{1}=\mbox{min}\left(g+\frac{h}{4}\left(\bar{B}_{N}-U_{N}^{t}\right),0\right)$
\end_inset


\end_layout

\begin_layout LyX-Code
    
\begin_inset Formula $s_{1}=sm\left(-g_{1}\right)^{m-1}$
\end_inset


\end_layout

\begin_layout LyX-Code
    
\begin_inset Formula $R_{N}=\left[s\cdot\left(-g_{1}\right)^{m}-\frac{d}{2}\cdot\left(\bar{B}_{N}+U_{N}^{t}\right)\right]/\left[1+\left(s_{1}\cdot\frac{h}{4}+\frac{d}{2}\right)\cdot W_{NN}\right]$
\end_inset


\end_layout

\begin_layout LyX-Code
  else 
\begin_inset Formula $R_{N}=s\cdot\left(-\min\left(g,0\right)\right)^{m}-d\cdot U_{N}^{t}$
\end_inset


\end_layout

\begin_layout LyX-Code
  if not 
\begin_inset Formula $cohesive$
\end_inset

 and 
\begin_inset Formula $R_{N}<0$
\end_inset

 then 
\begin_inset Formula $\mathbf{R}=0$
\end_inset

 return
\end_layout

\begin_layout LyX-Code
  
\begin_inset Formula $\mathbf{R}_{T}=-\mathbf{W}_{TT}^{-1}\left(\mathbf{B}_{T}+\mathbf{W}_{TN}R_{N}\right)$
\end_inset


\end_layout

\begin_layout LyX-Code
  if 
\begin_inset Formula $cohesive$
\end_inset

 and 
\begin_inset Formula $R_{N}<-cohesion$
\end_inset

 then 
\begin_inset Formula $cohesive=false$
\end_inset

 and 
\begin_inset Formula $R_{N}=-cohesion$
\end_inset


\end_layout

\begin_layout LyX-Code
  if 
\begin_inset Formula $\left\Vert \mathbf{R}_{T}\right\Vert >\mu\left|R_{N}\right|$
\end_inset

 then
\end_layout

\begin_layout LyX-Code
    
\begin_inset Formula $\mathbf{R}_{T}=\mu R_{N}\mathbf{R}_{T}/\left\Vert \mathbf{R}_{T}\right\Vert $
\end_inset


\end_layout

\begin_layout LyX-Code
    if 
\begin_inset Formula $cohesive$
\end_inset

 then 
\begin_inset Formula $cohesive=false$
\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "AlartCurnier"

\end_inset

￼￼￼￼P.
 Alart, A.
 Curnier, A mixed formulation for frictional contact problems prone to Newton
 like solution methods, Computer Methods in Applied Mechanics and Engineering,
 92 (3), 353-375, 1991.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "DeSaxceFeng"

\end_inset

G.
 De Saxcé and Z.
 Q.
 Feng, The bipotential method: a constructive approach to design the complete
 contact law with friction and improved numerical algorithms, Mathematical
 and Computer Modelling, 28, 225-245, 1998.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Hueber"

\end_inset

S.
 Hüeber, G.
 Stadler, and B.
 I.
 Wohlmuth, A primal-dual active set algorithm for three-dimensional contact
 problems with Coulomb friction, SIAM Journal on Scientific Computing, 30
 (2), 572-596, 2007.
\end_layout

\end_body
\end_document
